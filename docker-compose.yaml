version: '3.7'
services:
  app:
    image: kiettna/dstalent-backend:v2.0
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app
    ports:
      - 8080:8080
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      JWT_ACCESS_KEY: ${JWT_ACCESS_KEY}
      JWT_REFRESH_KEY: ${JWT_REFRESH_KEY}
      ACCESS_TIME: ${ACCESS_TIME}
      REFRESH_TIME: ${REFRESH_TIME}
      PORT: ${PORT}
      ACCOUNT_GMAIL: ${ACCOUNT_GMAIL}
      PASSWORD_GMAIL: ${PASSWORD_GMAIL}
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MONGODB_URI: ${MONGODB_URI}

    volumes:
      - ./backend/public/upload:/backend/public/upload 
    networks:
      - nodejs-mysql-network
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    restart: always
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - nodejs-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      timeout: 10s
      retries: 5
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    networks:
      - nodejs-mysql-network
    environment:
      - MONGO_INITDB_DATABASE= ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/test --quiet
      interval: 20s
      timeout: 10s
      retries: 5

networks:
  nodejs-mysql-network:
    name: nodejs-mysql-network